{"ast":null,"code":"import { clusterApiUrl, Connection, PublicKey } from '@solana/web3.js';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport { AnchorProvider } from '@project-serum/anchor';\nimport idl from '../idl.json';\nexport const wallets = [new PhantomWalletAdapter()];\nexport const programId = new PublicKey(idl.metadata.address);\nexport const getProvider = async wallet => {\n  const network = clusterApiUrl('devnet');\n  const connection = new Connection(network, 'processed');\n  const provider = new AnchorProvider(connection, wallet, 'processed');\n  return provider;\n};","map":{"version":3,"names":["clusterApiUrl","Connection","PublicKey","PhantomWalletAdapter","AnchorProvider","idl","wallets","programId","metadata","address","getProvider","wallet","network","connection","provider"],"sources":["C:/Users/user/Desktop/BCEndterm/src/config/web3.js"],"sourcesContent":["import { clusterApiUrl, Connection, PublicKey } from '@solana/web3.js';\r\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-wallets';\r\nimport { AnchorProvider } from '@project-serum/anchor';\r\nimport idl from '../idl.json';\r\n\r\nexport const wallets = [\r\n  new PhantomWalletAdapter(),\r\n];\r\n\r\nexport const programId = new PublicKey(idl.metadata.address);\r\n\r\nexport const getProvider = async (wallet) => {\r\n  const network = clusterApiUrl('devnet');\r\n  const connection = new Connection(network, 'processed');\r\n\r\n  const provider = new AnchorProvider(connection, wallet, 'processed');\r\n\r\n  return provider;\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AACtE,SAASC,oBAAoB,QAAQ,gCAAgC;AACrE,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,GAAG,MAAM,aAAa;AAE7B,OAAO,MAAMC,OAAO,GAAG,CACrB,IAAIH,oBAAoB,CAAC,CAAC,CAC3B;AAED,OAAO,MAAMI,SAAS,GAAG,IAAIL,SAAS,CAACG,GAAG,CAACG,QAAQ,CAACC,OAAO,CAAC;AAE5D,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,MAAMC,OAAO,GAAGZ,aAAa,CAAC,QAAQ,CAAC;EACvC,MAAMa,UAAU,GAAG,IAAIZ,UAAU,CAACW,OAAO,EAAE,WAAW,CAAC;EAEvD,MAAME,QAAQ,GAAG,IAAIV,cAAc,CAACS,UAAU,EAAEF,MAAM,EAAE,WAAW,CAAC;EAEpE,OAAOG,QAAQ;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}