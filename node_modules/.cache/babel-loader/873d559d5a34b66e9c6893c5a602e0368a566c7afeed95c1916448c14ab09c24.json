{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar browser_1 = require(\"./browser\");\nvar node_1 = require(\"./node\");\nvar SystemRandomSource = /** @class */function () {\n  function SystemRandomSource() {\n    this.isAvailable = false;\n    this.name = \"\";\n    // Try browser.\n    this._source = new browser_1.BrowserRandomSource();\n    if (this._source.isAvailable) {\n      this.isAvailable = true;\n      this.name = \"Browser\";\n      return;\n    }\n    // If no browser source, try Node.\n    this._source = new node_1.NodeRandomSource();\n    if (this._source.isAvailable) {\n      this.isAvailable = true;\n      this.name = \"Node\";\n      return;\n    }\n    // No sources, we're out of options.\n  }\n  SystemRandomSource.prototype.randomBytes = function (length) {\n    if (!this.isAvailable) {\n      throw new Error(\"System random byte generator is not available.\");\n    }\n    return this._source.randomBytes(length);\n  };\n  return SystemRandomSource;\n}();\nexports.SystemRandomSource = SystemRandomSource;","map":{"version":3,"names":["browser_1","require","node_1","SystemRandomSource","isAvailable","name","_source","BrowserRandomSource","NodeRandomSource","prototype","randomBytes","length","Error","exports"],"sources":["C:\\Users\\user\\Desktop\\BCEndterm\\node_modules\\@walletconnect\\utils\\node_modules\\@stablelib\\random\\source\\system.ts"],"sourcesContent":["// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nimport { RandomSource } from \"./\";\nimport { BrowserRandomSource } from \"./browser\";\nimport { NodeRandomSource } from \"./node\";\n\nexport class SystemRandomSource implements RandomSource {\n    isAvailable = false;\n    name = \"\";\n    private _source: RandomSource;\n\n    constructor() {\n        // Try browser.\n        this._source = new BrowserRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Browser\";\n            return;\n        }\n\n        // If no browser source, try Node.\n        this._source = new NodeRandomSource();\n        if (this._source.isAvailable) {\n            this.isAvailable = true;\n            this.name = \"Node\";\n            return;\n        }\n\n        // No sources, we're out of options.\n    }\n\n    randomBytes(length: number): Uint8Array {\n        if (!this.isAvailable) {\n            throw new Error(\"System random byte generator is not available.\");\n        }\n        return this._source.randomBytes(length);\n    }\n}\n"],"mappings":";;AAAA;AACA;;;;AAGA,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,kBAAA;EAKI,SAAAA,mBAAA;IAJA,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,IAAI,GAAG,EAAE;IAIL;IACA,IAAI,CAACC,OAAO,GAAG,IAAIN,SAAA,CAAAO,mBAAmB,EAAE;IACxC,IAAI,IAAI,CAACD,OAAO,CAACF,WAAW,EAAE;MAC1B,IAAI,CAACA,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,IAAI,GAAG,SAAS;MACrB;;IAGJ;IACA,IAAI,CAACC,OAAO,GAAG,IAAIJ,MAAA,CAAAM,gBAAgB,EAAE;IACrC,IAAI,IAAI,CAACF,OAAO,CAACF,WAAW,EAAE;MAC1B,IAAI,CAACA,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,IAAI,GAAG,MAAM;MAClB;;IAGJ;EACJ;EAEAF,kBAAA,CAAAM,SAAA,CAAAC,WAAW,GAAX,UAAYC,MAAc;IACtB,IAAI,CAAC,IAAI,CAACP,WAAW,EAAE;MACnB,MAAM,IAAIQ,KAAK,CAAC,gDAAgD,CAAC;;IAErE,OAAO,IAAI,CAACN,OAAO,CAACI,WAAW,CAACC,MAAM,CAAC;EAC3C,CAAC;EACL,OAAAR,kBAAC;AAAD,CAAC,CA/BD;AAAaU,OAAA,CAAAV,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}