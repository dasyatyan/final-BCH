{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\BCEndterm\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport Modal from 'react-modal';\nimport { wallets } from './config/web3';\nimport Home from './pages/home';\nimport CreatePoll from './pages/createPoll';\nimport StrawSoll from './pages/strawsoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyle = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '20px 70px',\n    gap: '20px',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    width: 'min(600px, 80%)',\n    height: '600px',\n    margin: 'auto'\n  }\n};\nfunction App() {\n  _s();\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n    endpoint: clusterApiUrl('devnet'),\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      wallets: wallets,\n      autoConnect: true,\n      children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixed-appbar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              className: \"text-5xl text-black p-4 rounded bg-white font-bold\",\n              children: \"StrawSoll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white w-20 font-semibold text-lg underline cursor-pointer\",\n              onClick: () => setOpen(true),\n              children: \"Tutorial?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            style: customStyle,\n            isOpen: open,\n            onRequestClose: () => setOpen(false),\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-[2.75rem] text-indigo-800 font-bold text-center\",\n              children: \"How to use Strawsoll?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg text-justify\",\n              children: [\"First of all, you'll have to install a solana wallet in your browser, like\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://phantom.app\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"text-indigo-500\",\n                children: [' ', \" Phantom. \", ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg text-justify\",\n              children: [\"After that, you need to have funds in your wallet. Since this app is using the Solana Devnet, you need to select Devnet in your wallet settings, then you can use the\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://solfaucet.com\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"text-indigo-500\",\n                children: [' ', \" Solfaucet \", ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), \"to provide $SOL tokens to your wallet's Public Key so you can interact with the blockchain.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg text-justify\",\n              children: \"Now that you have a fund-loaded wallet, connect it with our app, then you can create your poll or join a created poll by it's code.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/create\",\n              children: /*#__PURE__*/_jsxDEV(CreatePoll, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/soll/:strawsollId\",\n              children: /*#__PURE__*/_jsxDEV(StrawSoll, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","HashRouter","Router","Switch","Route","ConnectionProvider","WalletProvider","WalletModalProvider","clusterApiUrl","Modal","wallets","Home","CreatePoll","StrawSoll","jsxDEV","_jsxDEV","customStyle","overlay","backgroundColor","content","display","flexDirection","padding","gap","justifyContent","alignItems","width","height","margin","App","_s","open","setOpen","endpoint","children","autoConnect","className","fileName","_jsxFileName","lineNumber","columnNumber","href","onClick","style","isOpen","onRequestClose","target","rel","exact","path","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/BCEndterm/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\r\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport Modal from 'react-modal';\r\nimport { wallets } from './config/web3';\r\nimport Home from './pages/home';\r\nimport CreatePoll from './pages/createPoll';\r\nimport StrawSoll from './pages/strawsoll';\r\n\r\nconst customStyle = {\r\n  overlay: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '20px 70px',\r\n    gap: '20px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    width: 'min(600px, 80%)',\r\n    height: '600px',\r\n    margin: 'auto'\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <ConnectionProvider endpoint={clusterApiUrl('devnet')}>\r\n      <WalletProvider wallets={wallets} autoConnect>\r\n        <WalletModalProvider>\r\n          <Router>\r\n            <div className=\"fixed-appbar\">\r\n              <div className=\"w-20\" />\r\n              <a href=\"/\" className=\"text-5xl text-black p-4 rounded bg-white font-bold\">StrawSoll</a>\r\n              <span\r\n                className=\"text-white w-20 font-semibold text-lg underline cursor-pointer\"\r\n                onClick={() => setOpen(true)}\r\n              >Tutorial?</span>\r\n            </div>\r\n            <Modal style={customStyle} isOpen={open} onRequestClose={() => setOpen(false)}>\r\n              <h1 className=\"text-[2.75rem] text-indigo-800 font-bold text-center\">How to use Strawsoll?</h1>\r\n              <p className=\"text-lg text-justify\">\r\n                First of all, you'll have to install a solana wallet in your browser, like \r\n                <a\r\n                  href=\"https://phantom.app\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-indigo-500\"\r\n                >\r\n                  {' '} Phantom. {' '}\r\n                </a>\r\n              </p>\r\n              <p className=\"text-lg text-justify\">\r\n                After that, you need to have funds in your wallet. Since this app is using the Solana Devnet, you need to select Devnet in your wallet settings, then you can use the\r\n                <a\r\n                  href=\"https://solfaucet.com\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-indigo-500\"\r\n                >\r\n                  {' '} Solfaucet {' '}\r\n                </a>\r\n                to provide $SOL tokens to your wallet's Public Key so you can interact with the blockchain. \r\n              </p>\r\n              <p className=\"text-lg text-justify\">\r\n                Now that you have a fund-loaded wallet, connect it with our app, then you can create your poll or join a created poll by it's code.\r\n              </p>\r\n            </Modal>\r\n\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/create\">\r\n                <CreatePoll />\r\n              </Route>\r\n              <Route exact path=\"/soll/:strawsollId\">\r\n                <StrawSoll />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </WalletModalProvider>\r\n      </WalletProvider>\r\n    </ConnectionProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}